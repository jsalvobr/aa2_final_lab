---
# tasks file for openstack_servers

- when: openstack_server_state == 'present'
  name: Create server instances
  os_server:
    name:             "{{ __openstack_server.name }}"
    state:            "{{ openstack_server_state                    | default(__openstack_server.state) | default('present') }}"
    image:            "{{ __openstack_server.image                  | default('rhel-8.3') }}"
    flavor:           "{{ __openstack_server.flavor                 | default('GLOBAL-CPU_4_Memory_32768_Disk_60_flavor') }}"
    key_name:         "{{ __openstack_server.key_name               | default('ansible_ssh_key') }}"
    wait:             "{{ __openstack_server.wait                   | default('yes') }}"
    security_groups:  "{{ __openstack_server.security_groups }}"
    delete_fip:       "{{__openstack_server.delete_fip              | default(false) }}"
    public_ip:         "{{__openstack_server.public_ip              | default(false) }}"
    meta: "AnsibleGroup={{ __openstack_server.AnsibleGroup }},deployment_name={{ __openstack_server.deployment }}"
    nics:
      - net-name: "{{ __openstack_server.nics }}"
  loop: "{{ osp_instances }}"
  loop_control:
    loop_var: __openstack_server
  async: 900
  poll: 0
  register: r_instances

- when: openstack_server_state == 'present'
  name: Wait for async OSP instance creation to complete
  async_status: "jid={{ item.ansible_job_id }}"
  register: r_wait
  until: r_wait.finished
  retries: 900
  loop: "{{ r_instances.results }}"

- when: openstack_server_state == 'absent'
  name: Delete server instances
  os_server:
     name: "{{ __openstack_server.name }}"
     state: absent
  loop: "{{ osp_instances }}"
  loop_control:
    loop_var: __openstack_server
